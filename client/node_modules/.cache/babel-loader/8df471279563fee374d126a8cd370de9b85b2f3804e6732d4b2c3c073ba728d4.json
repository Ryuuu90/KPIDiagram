{"ast":null,"code":"var _jsxFileName = \"/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx\",\n  _s = $RefreshSig$();\n// src/components/KPIDiagram.jsx\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, { Background, Controls, useNodesState, useEdgesState, Handle, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid black',\n      padding: 10,\n      borderRadius: 5,\n      background: 'white'\n    },\n    children: [data.label, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: 5\n      },\n      onClick: data.onDrill,\n      children: \"\\u2795\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nconst nodeTypes = {\n  customNode: CustomNode\n};\nconst KPIDiagram = () => {\n  _s();\n  const [position, setPosition] = useState({\n    x: 250,\n    y: 25\n  });\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const fetchNode = async nodeId => {\n    const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n    return res.data;\n  };\n  const handleDrill = useCallback(async nodeId => {\n    var _parentNode$position;\n    const node = await fetchNode(nodeId);\n    if (!node || !node.childrenData) return;\n    const parentId = node.parentId;\n    const nextLevel = parseInt(node.level) + 1;\n    const entries = Object.entries(node.childrenData);\n    const totalChildren = entries.length;\n    const baseY = 100 + nextLevel * 200;\n    const parentNode = newNodesRef.current.find(n => n.id === parentId);\n    const centerX = (parentNode === null || parentNode === void 0 ? void 0 : (_parentNode$position = parentNode.position) === null || _parentNode$position === void 0 ? void 0 : _parentNode$position.x) || 0;\n    const spacing = 180;\n    const startX = centerX - (totalChildren - 1) * spacing / 2;\n    entries.forEach(([childId, childLabel], index) => {\n      const childX = startX + index * spacing;\n      edgesRef.current.push({\n        id: `e-${parentId}-${childId}`,\n        source: parentId,\n        target: childId,\n        animated: true\n      });\n      newNodesRef.current.push({\n        id: childId,\n        type: 'customNode',\n        position: {\n          x: childX,\n          y: baseY\n        },\n        data: {\n          label: childLabel,\n          id: childId,\n          onDrill: () => handleDrill(childId)\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniqueNodes = Array.from(new Map(newNodesRef.current.map(n => [n.id, n])).values());\n    const uniqueEdges = Array.from(new Map(edgesRef.current.map(e => [e.id, e])).values());\n    setNodes(uniqueNodes);\n    setEdges(uniqueEdges);\n    setLevel(prev => prev + 1);\n  }, []);\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      newNodesRef.current.push({\n        id: root.parentId,\n        type: 'customNode',\n        position: {\n          x: 500,\n          y: 50\n        },\n        data: {\n          label: root.parentName,\n          id: root.parentId,\n          onDrill: () => handleDrill(root.parentId)\n        }\n      });\n      setNodes(newNodesRef.current);\n    };\n    loadRoot();\n  }, [handleDrill]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(KPIDiagram, \"Xylsw/nRt5AZSqGpfvb7W+sx+MI=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = KPIDiagram;\nexport default KPIDiagram;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"KPIDiagram\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","ReactFlow","Background","Controls","useNodesState","useEdgesState","Handle","Position","axios","jsxDEV","_jsxDEV","CustomNode","data","style","border","padding","borderRadius","background","children","label","marginLeft","onClick","onDrill","fileName","_jsxFileName","lineNumber","columnNumber","_c","nodeTypes","customNode","KPIDiagram","_s","position","setPosition","x","y","level","setLevel","newNodesRef","edgesRef","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","fetchNode","nodeId","res","get","handleDrill","_parentNode$position","node","childrenData","parentId","nextLevel","parseInt","entries","Object","totalChildren","length","baseY","parentNode","current","find","n","id","centerX","spacing","startX","forEach","childId","childLabel","index","childX","push","source","target","animated","type","uniqueNodes","Array","from","Map","map","values","uniqueEdges","e","prev","loadRoot","root","parentName","width","height","fitView","_c2","$RefreshReg$"],"sources":["/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx"],"sourcesContent":["// src/components/KPIDiagram.jsx\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, {\n  Background,\n  Controls,\n  useNodesState,\n  useEdgesState,\n  Handle,\n  Position,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\nconst CustomNode = ({ data }) => {\n  return (\n    <div style={{ border: '1px solid black', padding: 10, borderRadius: 5, background: 'white' }}>\n      {data.label}\n      <button style={{ marginLeft: 5 }} onClick={data.onDrill}>âž•</button>\n    </div>\n  );\n};\n\nconst nodeTypes = {\n  customNode: CustomNode,\n};\n\nconst KPIDiagram = () => {\n  const [position, setPosition] = useState({ x: 250, y: 25 });\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const fetchNode = async (nodeId) => {\n    const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n    return res.data;\n  };\n\n  const handleDrill = useCallback(async (nodeId) => {\n    const node = await fetchNode(nodeId);\n\n    if (!node || !node.childrenData) return;\n\n    const parentId = node.parentId;\n    const nextLevel = parseInt(node.level) + 1;\n\n    const entries = Object.entries(node.childrenData);\n    const totalChildren = entries.length;\n    const baseY = 100 + nextLevel * 200;\n\n    const parentNode = newNodesRef.current.find(n => n.id === parentId);\n    const centerX = parentNode?.position?.x || 0;\n\n    const spacing = 180;\n    const startX = centerX - ((totalChildren - 1) * spacing) / 2;\n\n    entries.forEach(([childId, childLabel], index) => {\n      const childX = startX + index * spacing;\n\n      edgesRef.current.push({\n        id: `e-${parentId}-${childId}`,\n        source: parentId,\n        target: childId,\n        animated: true,\n      });\n\n      newNodesRef.current.push({\n        id: childId,\n        type: 'customNode',\n        position: { x: childX, y: baseY },\n        data: {\n          label: childLabel,\n          id: childId,\n          onDrill: () => handleDrill(childId),\n        },\n      });\n    });\n\n    // Remove duplicates\n    const uniqueNodes = Array.from(new Map(newNodesRef.current.map(n => [n.id, n])).values());\n    const uniqueEdges = Array.from(new Map(edgesRef.current.map(e => [e.id, e])).values());\n\n    setNodes(uniqueNodes);\n    setEdges(uniqueEdges);\n    setLevel(prev => prev + 1);\n  }, []);\n\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      newNodesRef.current.push({\n        id: root.parentId,\n        type: 'customNode',\n        position: { x: 500, y: 50 },\n        data: {\n          label: root.parentName,\n          id: root.parentId,\n          onDrill: () => handleDrill(root.parentId),\n        },\n      });\n\n      setNodes(newNodesRef.current);\n    };\n    loadRoot();\n  }, [handleDrill]);\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default KPIDiagram;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}