{"ast":null,"code":"var _jsxFileName = \"/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, { Background, Controls, useNodesState, useEdgesState, Handle, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\n// CustomNode component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '12px 16px',\n      borderRadius: 12,\n      background: '#fff',\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n      minWidth: 180,\n      maxWidth: 200,\n      textAlign: 'center',\n      fontSize: 14,\n      fontWeight: 500,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 8\n      },\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), data.hasChildren && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: data.onDrill,\n      style: {\n        padding: '4px 8px',\n        fontSize: 12,\n        borderRadius: 6,\n        border: 'none',\n        background: '#007bff',\n        color: 'white',\n        cursor: 'pointer'\n      },\n      children: data.expanded ? '➖' : '➕'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nconst KPIDiagram = () => {\n  _s();\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  const expandedNodesRef = useRef(new Set()); // Track expanded nodes\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const nodeTypes = useMemo(() => ({\n    customNode: CustomNode\n  }), []);\n  const fetchNode = async nodeId => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n      return res.data.node;\n    } catch (error) {\n      console.error('Error fetching node:', error);\n      return null;\n    }\n  };\n  const handleDrill = useCallback(async nodeId => {\n    var _parentNode$position;\n    const isExpanded = expandedNodesRef.current.has(nodeId);\n    if (isExpanded) {\n      // Collapse: remove all children and their edges\n      const updatedNodes = newNodesRef.current.filter(n => !edgesRef.current.some(e => e.source === nodeId && e.target === n.id));\n      const updatedEdges = edgesRef.current.filter(e => e.source !== nodeId);\n      newNodesRef.current = updatedNodes;\n      edgesRef.current = updatedEdges;\n      expandedNodesRef.current.delete(nodeId);\n\n      // Update expanded flag\n      newNodesRef.current = newNodesRef.current.map(n => n.id === nodeId ? {\n        ...n,\n        data: {\n          ...n.data,\n          expanded: false\n        }\n      } : n);\n      setNodes([...newNodesRef.current]);\n      setEdges([...edgesRef.current]);\n      return;\n    }\n\n    // Expand\n    const node = await fetchNode(nodeId);\n    if (!node || !node.childrenData) return;\n    const parentId = node.parentId || nodeId;\n    const nextLevel = parseInt(node.level) + 1 || level + 1;\n    const entries = Object.entries(node.childrenData);\n    const totalChildren = entries.length;\n    const baseY = 100 + nextLevel * 180;\n    const parentNode = newNodesRef.current.find(n => n.id === nodeId);\n    const centerX = (parentNode === null || parentNode === void 0 ? void 0 : (_parentNode$position = parentNode.position) === null || _parentNode$position === void 0 ? void 0 : _parentNode$position.x) || 0;\n    const spacing = Math.max(200, 1200 / totalChildren);\n    const startX = centerX - (totalChildren - 1) * spacing / 2;\n    entries.forEach(([childId, childLabel], index) => {\n      const childX = startX + index * spacing;\n      edgesRef.current.push({\n        id: `e-${nodeId}-${childId}`,\n        source: nodeId,\n        sourceHandle: 'a',\n        target: childId,\n        targetHandle: 'a',\n        animated: true\n      });\n      newNodesRef.current.push({\n        id: childId,\n        type: 'customNode',\n        position: {\n          x: childX,\n          y: baseY\n        },\n        data: {\n          label: childLabel.label,\n          id: childId,\n          hasChildren: childLabel.hasChildren,\n          expanded: false,\n          onDrill: () => handleDrill(childId)\n        }\n      });\n    });\n    expandedNodesRef.current.add(nodeId);\n\n    // Update parent node with `expanded: true`\n    newNodesRef.current = newNodesRef.current.map(n => n.id === nodeId ? {\n      ...n,\n      data: {\n        ...n.data,\n        expanded: true\n      }\n    } : n);\n\n    // Deduplicate\n    const uniqueNodes = Array.from(new Map(newNodesRef.current.map(n => [n.id, n])).values());\n    const uniqueEdges = Array.from(new Map(edgesRef.current.map(e => [e.id, e])).values());\n    setNodes(uniqueNodes);\n    setEdges(uniqueEdges);\n    setLevel(nextLevel);\n  }, [level]);\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      if (!root) return;\n      const rootId = root.parentId || 'EC140';\n      newNodesRef.current.push({\n        id: rootId,\n        type: 'customNode',\n        position: {\n          x: 500,\n          y: 50\n        },\n        data: {\n          label: root.parentName || 'Root Node',\n          id: rootId,\n          hasChildren: true,\n          expanded: false,\n          onDrill: () => handleDrill(rootId)\n        }\n      });\n      setNodes([...newNodesRef.current]);\n    };\n    loadRoot();\n  }, [handleDrill]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(KPIDiagram, \"HbHzJQdz/woi3PImq1fp6YbWOLQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = KPIDiagram;\nexport default KPIDiagram;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"KPIDiagram\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","ReactFlow","Background","Controls","useNodesState","useEdgesState","Handle","Position","axios","jsxDEV","_jsxDEV","CustomNode","data","style","border","padding","borderRadius","background","boxShadow","minWidth","maxWidth","textAlign","fontSize","fontWeight","position","children","type","Top","id","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","label","hasChildren","onClick","onDrill","color","cursor","expanded","Bottom","_c","KPIDiagram","_s","level","setLevel","newNodesRef","edgesRef","expandedNodesRef","Set","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeTypes","customNode","fetchNode","nodeId","res","get","node","error","console","handleDrill","_parentNode$position","isExpanded","current","has","updatedNodes","filter","n","some","e","source","target","updatedEdges","delete","map","childrenData","parentId","nextLevel","parseInt","entries","Object","totalChildren","length","baseY","parentNode","find","centerX","x","spacing","Math","max","startX","forEach","childId","childLabel","index","childX","push","sourceHandle","targetHandle","animated","y","add","uniqueNodes","Array","from","Map","values","uniqueEdges","loadRoot","root","rootId","parentName","width","height","fitView","fitViewOptions","_c2","$RefreshReg$"],"sources":["/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, {\n  Background,\n  Controls,\n  useNodesState,\n  useEdgesState,\n  Handle,\n  Position,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\n// CustomNode component\nconst CustomNode = ({ data }) => {\n  return (\n    <div\n      style={{\n        border: '1px solid #ccc',\n        padding: '12px 16px',\n        borderRadius: 12,\n        background: '#fff',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n        minWidth: 180,\n        maxWidth: 200,\n        textAlign: 'center',\n        fontSize: 14,\n        fontWeight: 500,\n        position: 'relative',\n      }}\n    >\n      <Handle type=\"target\" position={Position.Top} id=\"a\" />\n      <div style={{ marginBottom: 8 }}>{data.label}</div>\n      {data.hasChildren && (\n        <button\n          onClick={data.onDrill}\n          style={{\n            padding: '4px 8px',\n            fontSize: 12,\n            borderRadius: 6,\n            border: 'none',\n            background: '#007bff',\n            color: 'white',\n            cursor: 'pointer',\n          }}\n        >\n          {data.expanded ? '➖' : '➕'}\n        </button>\n      )}\n      <Handle type=\"source\" position={Position.Bottom} id=\"a\" />\n    </div>\n  );\n};\n\nconst KPIDiagram = () => {\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  const expandedNodesRef = useRef(new Set()); // Track expanded nodes\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const nodeTypes = useMemo(() => ({ customNode: CustomNode }), []);\n\n  const fetchNode = async (nodeId) => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n      return res.data.node;\n    } catch (error) {\n      console.error('Error fetching node:', error);\n      return null;\n    }\n  };\n\n  const handleDrill = useCallback(\n    async (nodeId) => {\n      const isExpanded = expandedNodesRef.current.has(nodeId);\n\n      if (isExpanded) {\n        // Collapse: remove all children and their edges\n        const updatedNodes = newNodesRef.current.filter(n => !edgesRef.current.some(e => e.source === nodeId && e.target === n.id));\n        const updatedEdges = edgesRef.current.filter(e => e.source !== nodeId);\n\n        newNodesRef.current = updatedNodes;\n        edgesRef.current = updatedEdges;\n        expandedNodesRef.current.delete(nodeId);\n\n        // Update expanded flag\n        newNodesRef.current = newNodesRef.current.map(n =>\n          n.id === nodeId\n            ? {\n                ...n,\n                data: { ...n.data, expanded: false },\n              }\n            : n\n        );\n\n        setNodes([...newNodesRef.current]);\n        setEdges([...edgesRef.current]);\n        return;\n      }\n\n      // Expand\n      const node = await fetchNode(nodeId);\n      if (!node || !node.childrenData) return;\n\n      const parentId = node.parentId || nodeId;\n      const nextLevel = parseInt(node.level) + 1 || level + 1;\n      const entries = Object.entries(node.childrenData);\n      const totalChildren = entries.length;\n      const baseY = 100 + nextLevel * 180;\n\n      const parentNode = newNodesRef.current.find((n) => n.id === nodeId);\n      const centerX = parentNode?.position?.x || 0;\n      const spacing = Math.max(200, 1200 / totalChildren);\n      const startX = centerX - ((totalChildren - 1) * spacing) / 2;\n\n      entries.forEach(([childId, childLabel], index) => {\n        const childX = startX + index * spacing;\n\n        edgesRef.current.push({\n          id: `e-${nodeId}-${childId}`,\n          source: nodeId,\n          sourceHandle: 'a',\n          target: childId,\n          targetHandle: 'a',\n          animated: true,\n        });\n\n        newNodesRef.current.push({\n          id: childId,\n          type: 'customNode',\n          position: { x: childX, y: baseY },\n          data: {\n            label: childLabel.label,\n            id: childId,\n            hasChildren: childLabel.hasChildren,\n            expanded: false,\n            onDrill: () => handleDrill(childId),\n          },\n        });\n      });\n\n      expandedNodesRef.current.add(nodeId);\n\n      // Update parent node with `expanded: true`\n      newNodesRef.current = newNodesRef.current.map(n =>\n        n.id === nodeId\n          ? {\n              ...n,\n              data: { ...n.data, expanded: true },\n            }\n          : n\n      );\n\n      // Deduplicate\n      const uniqueNodes = Array.from(new Map(newNodesRef.current.map((n) => [n.id, n])).values());\n      const uniqueEdges = Array.from(new Map(edgesRef.current.map((e) => [e.id, e])).values());\n\n      setNodes(uniqueNodes);\n      setEdges(uniqueEdges);\n      setLevel(nextLevel);\n    },\n    [level]\n  );\n\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      if (!root) return;\n\n      const rootId = root.parentId || 'EC140';\n      newNodesRef.current.push({\n        id: rootId,\n        type: 'customNode',\n        position: { x: 500, y: 50 },\n        data: {\n          label: root.parentName || 'Root Node',\n          id: rootId,\n          hasChildren: true,\n          expanded: false,\n          onDrill: () => handleDrill(rootId),\n        },\n      });\n\n      setNodes([...newNodesRef.current]);\n    };\n    loadRoot();\n  }, [handleDrill]);\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n        fitViewOptions={{ padding: 0.4 }}\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default KPIDiagram;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}