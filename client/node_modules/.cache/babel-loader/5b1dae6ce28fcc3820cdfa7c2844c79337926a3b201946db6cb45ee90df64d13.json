{"ast":null,"code":"var _jsxFileName = \"/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, { Background, Controls, useNodesState, useReactFlow, useEdgesState, Handle, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\n// CustomNode component\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '12px 16px',\n      borderRadius: 12,\n      background: '#fff',\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n      minWidth: 180,\n      maxWidth: 200,\n      textAlign: 'center',\n      fontSize: 14,\n      fontWeight: 500,\n      position: 'relative'\n      // avoid scale transform here!\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Left,\n      id: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: !data.collapsing && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        transition: {\n          duration: 0.4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 8\n          },\n          children: data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), data.hasChildren && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: data.onDrill,\n          style: {\n            padding: '4px 8px',\n            fontSize: 12,\n            borderRadius: 6,\n            border: 'none',\n            background: '#007bff',\n            color: 'white',\n            cursor: 'pointer'\n          },\n          children: data.expanded ? '➖' : '➕'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Right,\n      id: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nconst KPIDiagram = () => {\n  _s();\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  const expandedNodesRef = useRef(new Set()); // Track expanded nodes\n  const reactFlowWrapper = useRef(null);\n  const reactFlowInstance = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const nodeTypes = useMemo(() => ({\n    customNode: CustomNode\n  }), []);\n  const fetchNode = async nodeId => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n      return res.data.node;\n    } catch (error) {\n      console.error('Error fetching node:', error);\n      return null;\n    }\n  };\n  const removeDescendants = parentId => {\n    const toRemove = new Set();\n    const stack = [parentId];\n    while (stack.length > 0) {\n      const current = stack.pop();\n\n      // Find all direct children of current node\n      const children = edgesRef.current.filter(e => e.source === current).map(e => e.target);\n      for (const childId of children) {\n        // Check if child has other parents besides `current`\n        const otherParents = edgesRef.current.filter(e => e.target === childId && e.source !== current);\n        if (otherParents.length === 0) {\n          // No other parents, safe to remove this child and continue recursion\n          stack.push(childId);\n          toRemove.add(childId);\n        }\n        // else: child has other parents, so keep it\n      }\n    }\n\n    // Remove all descendant nodes that are safe to remove\n    newNodesRef.current = newNodesRef.current.filter(n => !toRemove.has(n.id));\n\n    // Remove all edges where source or target is in toRemove\n    edgesRef.current = edgesRef.current.filter(e => !toRemove.has(e.source) && !toRemove.has(e.target));\n\n    // Remove parent from expanded set\n    expandedNodesRef.current.delete(parentId);\n\n    // Mark the parent node as collapsed (expanded: false)\n    newNodesRef.current = newNodesRef.current.map(n => n.id === parentId ? {\n      ...n,\n      data: {\n        ...n.data,\n        expanded: false\n      }\n    } : n);\n  };\n\n  // Helper function to compute bounding box of nodes by id list\n  const computeBounds = nodes => {\n    if (nodes.length === 0) return null;\n    let minX = nodes[0].position.x;\n    let minY = nodes[0].position.y;\n    let maxX = nodes[0].position.x;\n    let maxY = nodes[0].position.y;\n    nodes.forEach(({\n      position,\n      style\n    }) => {\n      var _style$width, _style$height;\n      const width = (_style$width = style === null || style === void 0 ? void 0 : style.width) !== null && _style$width !== void 0 ? _style$width : 180; // default width if not specified\n      const height = (_style$height = style === null || style === void 0 ? void 0 : style.height) !== null && _style$height !== void 0 ? _style$height : 80; // default height if not specified\n      minX = Math.min(minX, position.x);\n      minY = Math.min(minY, position.y);\n      maxX = Math.max(maxX, position.x + width);\n      maxY = Math.max(maxY, position.y + height);\n    });\n    return {\n      x: minX,\n      y: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  };\n  const handleDrill = useCallback(async nodeId => {\n    var _parentNode$position, _parentNode$position2;\n    const isExpanded = expandedNodesRef.current.has(nodeId);\n    if (isExpanded) {\n      removeDescendants(nodeId);\n      setNodes(newNodesRef.current);\n      setEdges(edgesRef.current);\n      return;\n    }\n\n    // Expand\n    const node = await fetchNode(nodeId);\n    if (!node || !node.childrenData) return;\n    const parentId = node.parentId || nodeId;\n    const nextLevel = parseInt(node.level) + 1 || level + 1;\n    const entries = Object.entries(node.childrenData);\n    const totalChildren = entries.length;\n    const parentNode = newNodesRef.current.find(n => n.id === nodeId);\n    const baseX = (parentNode === null || parentNode === void 0 ? void 0 : (_parentNode$position = parentNode.position) === null || _parentNode$position === void 0 ? void 0 : _parentNode$position.x) + 250 || 250; // move to the right\n    const centerY = (parentNode === null || parentNode === void 0 ? void 0 : (_parentNode$position2 = parentNode.position) === null || _parentNode$position2 === void 0 ? void 0 : _parentNode$position2.y) || 0;\n    const verticalSpacing = 120;\n    const startY = centerY - (totalChildren - 1) * verticalSpacing / 2;\n    entries.forEach(([childId, childLabel], index) => {\n      const childY = startY + index * verticalSpacing;\n      edgesRef.current.push({\n        id: `e-${nodeId}-${childId}`,\n        source: nodeId,\n        sourceHandle: 'a',\n        target: childId,\n        targetHandle: 'a',\n        animated: true\n      });\n      newNodesRef.current.push({\n        id: childId,\n        type: 'customNode',\n        position: {\n          x: baseX,\n          y: childY\n        },\n        data: {\n          label: childLabel.label,\n          id: childId,\n          hasChildren: childLabel.hasChildren,\n          expanded: false,\n          onDrill: () => handleDrill(childId)\n        }\n      });\n    });\n    expandedNodesRef.current.add(nodeId);\n\n    // Update parent node with `expanded: true`\n    newNodesRef.current = newNodesRef.current.map(n => n.id === nodeId ? {\n      ...n,\n      data: {\n        ...n.data,\n        expanded: true\n      }\n    } : n);\n\n    // Deduplicate\n    const uniqueNodes = Array.from(new Map(newNodesRef.current.map(n => [n.id, n])).values());\n    const uniqueEdges = Array.from(new Map(edgesRef.current.map(e => [e.id, e])).values());\n    setNodes(uniqueNodes);\n    setEdges(uniqueEdges);\n    setLevel(nextLevel);\n    const subtreeNodeIds = [nodeId, ...entries.map(([childId]) => childId)];\n    const subtreeNodes = newNodesRef.current.filter(n => subtreeNodeIds.includes(n.id));\n    const bounds = computeBounds(subtreeNodes);\n    if (bounds && reactFlowInstance.current) {\n      reactFlowInstance.current.fitBounds(bounds, {\n        padding: 0.4,\n        maxZoom: 1.5\n      });\n    }\n  }, [level, reactFlowInstance]);\n  const onInit = useCallback(rfi => {\n    reactFlowInstance.current = rfi;\n  }, []);\n  const fitViewWithDelay = () => {\n    setTimeout(() => {\n      if (reactFlowInstance.current) {\n        reactFlowInstance.current.fitView({\n          padding: 0.2\n        });\n      }\n    }, 100);\n  };\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      if (!root) return;\n      const rootId = root.parentId || 'EC140';\n      newNodesRef.current.push({\n        id: rootId,\n        type: 'customNode',\n        position: {\n          x: 500,\n          y: 50\n        },\n        data: {\n          label: root.parentName || 'Root Node',\n          id: rootId,\n          hasChildren: true,\n          expanded: false,\n          onDrill: () => handleDrill(rootId)\n        }\n      });\n      setNodes([...newNodesRef.current]);\n    };\n    loadRoot();\n  }, [handleDrill]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    ref: reactFlowWrapper,\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.4\n      },\n      onInit: onInit,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_s(KPIDiagram, \"Arw5iXeEA9N2Y8TBBAbYA8S63Hc=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = KPIDiagram;\nexport default KPIDiagram;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"KPIDiagram\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","ReactFlow","Background","Controls","useNodesState","useReactFlow","useEdgesState","Handle","Position","axios","motion","AnimatePresence","jsxDEV","_jsxDEV","CustomNode","data","style","border","padding","borderRadius","background","boxShadow","minWidth","maxWidth","textAlign","fontSize","fontWeight","position","children","type","Left","id","fileName","_jsxFileName","lineNumber","columnNumber","collapsing","div","initial","opacity","animate","exit","transition","duration","marginBottom","label","hasChildren","onClick","onDrill","color","cursor","expanded","Right","_c","KPIDiagram","_s","level","setLevel","newNodesRef","edgesRef","expandedNodesRef","Set","reactFlowWrapper","reactFlowInstance","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeTypes","customNode","fetchNode","nodeId","res","get","node","error","console","removeDescendants","parentId","toRemove","stack","length","current","pop","filter","e","source","map","target","childId","otherParents","push","add","n","has","delete","computeBounds","minX","x","minY","y","maxX","maxY","forEach","_style$width","_style$height","width","height","Math","min","max","handleDrill","_parentNode$position","_parentNode$position2","isExpanded","childrenData","nextLevel","parseInt","entries","Object","totalChildren","parentNode","find","baseX","centerY","verticalSpacing","startY","childLabel","index","childY","sourceHandle","targetHandle","animated","uniqueNodes","Array","from","Map","values","uniqueEdges","subtreeNodeIds","subtreeNodes","includes","bounds","fitBounds","maxZoom","onInit","rfi","fitViewWithDelay","setTimeout","fitView","loadRoot","root","rootId","parentName","ref","fitViewOptions","_c2","$RefreshReg$"],"sources":["/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, {\n  Background,\n  Controls,\n  useNodesState,\n  useReactFlow, \n  useEdgesState,\n  Handle,\n  Position,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\n// CustomNode component\nimport { motion, AnimatePresence } from 'framer-motion';\nconst CustomNode = ({ data }) => {\n  return (\n    <div\n      style={{\n        border: '1px solid #ccc',\n        padding: '12px 16px',\n        borderRadius: 12,\n        background: '#fff',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n        minWidth: 180,\n        maxWidth: 200,\n        textAlign: 'center',\n        fontSize: 14,\n        fontWeight: 500,\n        position: 'relative',\n        // avoid scale transform here!\n      }}\n    >\n      <Handle type=\"target\" position={Position.Left} id=\"a\" />\n      {/* Animate content inside */}\n      <AnimatePresence>\n        {!data.collapsing && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.4 }}\n          >\n            <div style={{ marginBottom: 8 }}>{data.label}</div>\n            {data.hasChildren && (\n              <button\n                onClick={data.onDrill}\n                style={{\n                  padding: '4px 8px',\n                  fontSize: 12,\n                  borderRadius: 6,\n                  border: 'none',\n                  background: '#007bff',\n                  color: 'white',\n                  cursor: 'pointer',\n                }}\n              >\n                {data.expanded ? '➖' : '➕'}\n              </button>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <Handle type=\"source\" position={Position.Right} id=\"a\" />\n    </div>\n  );\n};\n\n\nconst KPIDiagram = () => {\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  const expandedNodesRef = useRef(new Set()); // Track expanded nodes\n  const reactFlowWrapper = useRef(null);\n  const reactFlowInstance = useRef(null); \n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const nodeTypes = useMemo(() => ({ customNode: CustomNode }), []);\n\n  const fetchNode = async (nodeId) => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n      return res.data.node;\n    } catch (error) {\n      console.error('Error fetching node:', error);\n      return null;\n    }\n  };\n\n  const removeDescendants = (parentId) => {\n    const toRemove = new Set();\n    const stack = [parentId];\n  \n    while (stack.length > 0) {\n      const current = stack.pop();\n  \n      // Find all direct children of current node\n      const children = edgesRef.current\n        .filter(e => e.source === current)\n        .map(e => e.target);\n  \n      for (const childId of children) {\n        // Check if child has other parents besides `current`\n        const otherParents = edgesRef.current.filter(\n          e => e.target === childId && e.source !== current\n        );\n  \n        if (otherParents.length === 0) {\n          // No other parents, safe to remove this child and continue recursion\n          stack.push(childId);\n          toRemove.add(childId);\n        }\n        // else: child has other parents, so keep it\n      }\n    }\n  \n    // Remove all descendant nodes that are safe to remove\n    newNodesRef.current = newNodesRef.current.filter(n => !toRemove.has(n.id));\n  \n    // Remove all edges where source or target is in toRemove\n    edgesRef.current = edgesRef.current.filter(\n      e => !toRemove.has(e.source) && !toRemove.has(e.target)\n    );\n  \n    // Remove parent from expanded set\n    expandedNodesRef.current.delete(parentId);\n  \n    // Mark the parent node as collapsed (expanded: false)\n    newNodesRef.current = newNodesRef.current.map(n =>\n      n.id === parentId ? { ...n, data: { ...n.data, expanded: false } } : n\n    );\n  };\n\n  // Helper function to compute bounding box of nodes by id list\n  const computeBounds = (nodes) => {\n    if (nodes.length === 0) return null;\n    let minX = nodes[0].position.x;\n    let minY = nodes[0].position.y;\n    let maxX = nodes[0].position.x;\n    let maxY = nodes[0].position.y;\n\n    nodes.forEach(({ position, style }) => {\n      const width = (style?.width ?? 180); // default width if not specified\n      const height = (style?.height ?? 80); // default height if not specified\n      minX = Math.min(minX, position.x);\n      minY = Math.min(minY, position.y);\n      maxX = Math.max(maxX, position.x + width);\n      maxY = Math.max(maxY, position.y + height);\n    });\n\n    return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\n  };\n\n  \n  const handleDrill = useCallback(\n    async (nodeId) => {\n      const isExpanded = expandedNodesRef.current.has(nodeId);\n\n      if (isExpanded) {\n        removeDescendants(nodeId);\n      \n        setNodes(newNodesRef.current);\n        setEdges(edgesRef.current);\n      \n        return;\n      }\n\n      // Expand\n      const node = await fetchNode(nodeId);\n      if (!node || !node.childrenData) return;\n\n      const parentId = node.parentId || nodeId;\n      const nextLevel = parseInt(node.level) + 1 || level + 1;\n      const entries = Object.entries(node.childrenData);\n      const totalChildren = entries.length;\n\n      const parentNode = newNodesRef.current.find((n) => n.id === nodeId);\n      const baseX = parentNode?.position?.x + 250 || 250; // move to the right\n      const centerY = parentNode?.position?.y || 0;\n      const verticalSpacing = 120;\n      const startY = centerY - ((totalChildren - 1) * verticalSpacing) / 2;\n\n      entries.forEach(([childId, childLabel], index) => {\n        const childY = startY + index * verticalSpacing;\n\n        edgesRef.current.push({\n          id: `e-${nodeId}-${childId}`,\n          source: nodeId,\n          sourceHandle: 'a',\n          target: childId,\n          targetHandle: 'a',\n          animated: true,\n        });\n\n        newNodesRef.current.push({\n          id: childId,\n          type: 'customNode',\n          position: { x: baseX, y: childY },\n          data: {\n            label: childLabel.label,\n            id: childId,\n            hasChildren: childLabel.hasChildren,\n            expanded: false,\n            onDrill: () => handleDrill(childId),\n          },\n        });\n      });\n\n      expandedNodesRef.current.add(nodeId);\n\n      // Update parent node with `expanded: true`\n      newNodesRef.current = newNodesRef.current.map(n =>\n        n.id === nodeId\n          ? {\n              ...n,\n              data: { ...n.data, expanded: true },\n            }\n          : n\n      );\n\n      // Deduplicate\n      const uniqueNodes = Array.from(new Map(newNodesRef.current.map((n) => [n.id, n])).values());\n      const uniqueEdges = Array.from(new Map(edgesRef.current.map((e) => [e.id, e])).values());\n\n      setNodes(uniqueNodes);\n      setEdges(uniqueEdges);\n      setLevel(nextLevel);\n      const subtreeNodeIds = [nodeId, ...entries.map(([childId]) => childId)];\n      const subtreeNodes = newNodesRef.current.filter(n => subtreeNodeIds.includes(n.id));\n      const bounds = computeBounds(subtreeNodes);\n\n      if (bounds && reactFlowInstance.current) {\n        reactFlowInstance.current.fitBounds(bounds, {\n          padding: 0.4,\n          maxZoom: 1.5,\n        });\n      }\n    },\n    [level, reactFlowInstance]\n  );\n  const onInit = useCallback((rfi) => {\n    reactFlowInstance.current = rfi;\n  }, []);\n\n  const fitViewWithDelay = () => {\n    setTimeout(() => {\n      if (reactFlowInstance.current) {\n        reactFlowInstance.current.fitView({ padding: 0.2 });\n      }\n    }, 100);\n  };\n\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      if (!root) return;\n\n      const rootId = root.parentId || 'EC140';\n      newNodesRef.current.push({\n        id: rootId,\n        type: 'customNode',\n        position: { x: 500, y: 50 },\n        data: {\n          label: root.parentName || 'Root Node',\n          id: rootId,\n          hasChildren: true,\n          expanded: false,\n          onDrill: () => handleDrill(rootId),\n        },\n      });\n\n      setNodes([...newNodesRef.current]);\n    };\n    loadRoot();\n  }, [handleDrill]);\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }} ref={reactFlowWrapper}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n        fitViewOptions={{ padding: 0.4 }}\n        onInit={onInit}\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default KPIDiagram;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAChF,OAAOC,SAAS,IACdC,UAAU,EACVC,QAAQ,EACRC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,MAAM,EACNC,QAAQ,QACH,WAAW;AAClB,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,oBACEF,OAAA;IACEG,KAAK,EAAE;MACLC,MAAM,EAAE,gBAAgB;MACxBC,OAAO,EAAE,WAAW;MACpBC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE,2BAA2B;MACtCC,QAAQ,EAAE,GAAG;MACbC,QAAQ,EAAE,GAAG;MACbC,SAAS,EAAE,QAAQ;MACnBC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,GAAG;MACfC,QAAQ,EAAE;MACV;IACF,CAAE;IAAAC,QAAA,gBAEFf,OAAA,CAACN,MAAM;MAACsB,IAAI,EAAC,QAAQ;MAACF,QAAQ,EAAEnB,QAAQ,CAACsB,IAAK;MAACC,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExDtB,OAAA,CAACF,eAAe;MAAAiB,QAAA,EACb,CAACb,IAAI,CAACqB,UAAU,iBACfvB,OAAA,CAACH,MAAM,CAAC2B,GAAG;QACTC,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBE,IAAI,EAAE;UAAEF,OAAO,EAAE;QAAE,CAAE;QACrBG,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAAf,QAAA,gBAE9Bf,OAAA;UAAKG,KAAK,EAAE;YAAE4B,YAAY,EAAE;UAAE,CAAE;UAAAhB,QAAA,EAAEb,IAAI,CAAC8B;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAClDpB,IAAI,CAAC+B,WAAW,iBACfjC,OAAA;UACEkC,OAAO,EAAEhC,IAAI,CAACiC,OAAQ;UACtBhC,KAAK,EAAE;YACLE,OAAO,EAAE,SAAS;YAClBO,QAAQ,EAAE,EAAE;YACZN,YAAY,EAAE,CAAC;YACfF,MAAM,EAAE,MAAM;YACdG,UAAU,EAAE,SAAS;YACrB6B,KAAK,EAAE,OAAO;YACdC,MAAM,EAAE;UACV,CAAE;UAAAtB,QAAA,EAEDb,IAAI,CAACoC,QAAQ,GAAG,GAAG,GAAG;QAAG;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IACb;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC,eAClBtB,OAAA,CAACN,MAAM;MAACsB,IAAI,EAAC,QAAQ;MAACF,QAAQ,EAAEnB,QAAQ,CAAC4C,KAAM;MAACrB,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACkB,EAAA,GAnDIvC,UAAU;AAsDhB,MAAMwC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzD,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM0D,WAAW,GAAG3D,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAM4D,QAAQ,GAAG5D,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAM6D,gBAAgB,GAAG7D,MAAM,CAAC,IAAI8D,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAMC,gBAAgB,GAAG/D,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMgE,iBAAiB,GAAGhE,MAAM,CAAC,IAAI,CAAC;EAEtC,MAAM,CAACiE,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG9D,aAAa,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC+D,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG/D,aAAa,CAAC,EAAE,CAAC;EAE1D,MAAMgE,SAAS,GAAGxE,OAAO,CAAC,OAAO;IAAEyE,UAAU,EAAEzD;EAAW,CAAC,CAAC,EAAE,EAAE,CAAC;EAEjE,MAAM0D,SAAS,GAAG,MAAOC,MAAM,IAAK;IAClC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMjE,KAAK,CAACkE,GAAG,CAAC,kCAAkCF,MAAM,EAAE,CAAC;MACvE,OAAOC,GAAG,CAAC3D,IAAI,CAAC6D,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,QAAQ,IAAK;IACtC,MAAMC,QAAQ,GAAG,IAAIpB,GAAG,CAAC,CAAC;IAC1B,MAAMqB,KAAK,GAAG,CAACF,QAAQ,CAAC;IAExB,OAAOE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,OAAO,GAAGF,KAAK,CAACG,GAAG,CAAC,CAAC;;MAE3B;MACA,MAAMzD,QAAQ,GAAG+B,QAAQ,CAACyB,OAAO,CAC9BE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKJ,OAAO,CAAC,CACjCK,GAAG,CAACF,CAAC,IAAIA,CAAC,CAACG,MAAM,CAAC;MAErB,KAAK,MAAMC,OAAO,IAAI/D,QAAQ,EAAE;QAC9B;QACA,MAAMgE,YAAY,GAAGjC,QAAQ,CAACyB,OAAO,CAACE,MAAM,CAC1CC,CAAC,IAAIA,CAAC,CAACG,MAAM,KAAKC,OAAO,IAAIJ,CAAC,CAACC,MAAM,KAAKJ,OAC5C,CAAC;QAED,IAAIQ,YAAY,CAACT,MAAM,KAAK,CAAC,EAAE;UAC7B;UACAD,KAAK,CAACW,IAAI,CAACF,OAAO,CAAC;UACnBV,QAAQ,CAACa,GAAG,CAACH,OAAO,CAAC;QACvB;QACA;MACF;IACF;;IAEA;IACAjC,WAAW,CAAC0B,OAAO,GAAG1B,WAAW,CAAC0B,OAAO,CAACE,MAAM,CAACS,CAAC,IAAI,CAACd,QAAQ,CAACe,GAAG,CAACD,CAAC,CAAChE,EAAE,CAAC,CAAC;;IAE1E;IACA4B,QAAQ,CAACyB,OAAO,GAAGzB,QAAQ,CAACyB,OAAO,CAACE,MAAM,CACxCC,CAAC,IAAI,CAACN,QAAQ,CAACe,GAAG,CAACT,CAAC,CAACC,MAAM,CAAC,IAAI,CAACP,QAAQ,CAACe,GAAG,CAACT,CAAC,CAACG,MAAM,CACxD,CAAC;;IAED;IACA9B,gBAAgB,CAACwB,OAAO,CAACa,MAAM,CAACjB,QAAQ,CAAC;;IAEzC;IACAtB,WAAW,CAAC0B,OAAO,GAAG1B,WAAW,CAAC0B,OAAO,CAACK,GAAG,CAACM,CAAC,IAC7CA,CAAC,CAAChE,EAAE,KAAKiD,QAAQ,GAAG;MAAE,GAAGe,CAAC;MAAEhF,IAAI,EAAE;QAAE,GAAGgF,CAAC,CAAChF,IAAI;QAAEoC,QAAQ,EAAE;MAAM;IAAE,CAAC,GAAG4C,CACvE,CAAC;EACH,CAAC;;EAED;EACA,MAAMG,aAAa,GAAIlC,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACmB,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IACnC,IAAIgB,IAAI,GAAGnC,KAAK,CAAC,CAAC,CAAC,CAACrC,QAAQ,CAACyE,CAAC;IAC9B,IAAIC,IAAI,GAAGrC,KAAK,CAAC,CAAC,CAAC,CAACrC,QAAQ,CAAC2E,CAAC;IAC9B,IAAIC,IAAI,GAAGvC,KAAK,CAAC,CAAC,CAAC,CAACrC,QAAQ,CAACyE,CAAC;IAC9B,IAAII,IAAI,GAAGxC,KAAK,CAAC,CAAC,CAAC,CAACrC,QAAQ,CAAC2E,CAAC;IAE9BtC,KAAK,CAACyC,OAAO,CAAC,CAAC;MAAE9E,QAAQ;MAAEX;IAAM,CAAC,KAAK;MAAA,IAAA0F,YAAA,EAAAC,aAAA;MACrC,MAAMC,KAAK,IAAAF,YAAA,GAAI1F,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE4F,KAAK,cAAAF,YAAA,cAAAA,YAAA,GAAI,GAAI,CAAC,CAAC;MACrC,MAAMG,MAAM,IAAAF,aAAA,GAAI3F,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE6F,MAAM,cAAAF,aAAA,cAAAA,aAAA,GAAI,EAAG,CAAC,CAAC;MACtCR,IAAI,GAAGW,IAAI,CAACC,GAAG,CAACZ,IAAI,EAAExE,QAAQ,CAACyE,CAAC,CAAC;MACjCC,IAAI,GAAGS,IAAI,CAACC,GAAG,CAACV,IAAI,EAAE1E,QAAQ,CAAC2E,CAAC,CAAC;MACjCC,IAAI,GAAGO,IAAI,CAACE,GAAG,CAACT,IAAI,EAAE5E,QAAQ,CAACyE,CAAC,GAAGQ,KAAK,CAAC;MACzCJ,IAAI,GAAGM,IAAI,CAACE,GAAG,CAACR,IAAI,EAAE7E,QAAQ,CAAC2E,CAAC,GAAGO,MAAM,CAAC;IAC5C,CAAC,CAAC;IAEF,OAAO;MAAET,CAAC,EAAED,IAAI;MAAEG,CAAC,EAAED,IAAI;MAAEO,KAAK,EAAEL,IAAI,GAAGJ,IAAI;MAAEU,MAAM,EAAEL,IAAI,GAAGH;IAAK,CAAC;EACtE,CAAC;EAGD,MAAMY,WAAW,GAAGrH,WAAW,CAC7B,MAAO6E,MAAM,IAAK;IAAA,IAAAyC,oBAAA,EAAAC,qBAAA;IAChB,MAAMC,UAAU,GAAGxD,gBAAgB,CAACwB,OAAO,CAACY,GAAG,CAACvB,MAAM,CAAC;IAEvD,IAAI2C,UAAU,EAAE;MACdrC,iBAAiB,CAACN,MAAM,CAAC;MAEzBR,QAAQ,CAACP,WAAW,CAAC0B,OAAO,CAAC;MAC7BhB,QAAQ,CAACT,QAAQ,CAACyB,OAAO,CAAC;MAE1B;IACF;;IAEA;IACA,MAAMR,IAAI,GAAG,MAAMJ,SAAS,CAACC,MAAM,CAAC;IACpC,IAAI,CAACG,IAAI,IAAI,CAACA,IAAI,CAACyC,YAAY,EAAE;IAEjC,MAAMrC,QAAQ,GAAGJ,IAAI,CAACI,QAAQ,IAAIP,MAAM;IACxC,MAAM6C,SAAS,GAAGC,QAAQ,CAAC3C,IAAI,CAACpB,KAAK,CAAC,GAAG,CAAC,IAAIA,KAAK,GAAG,CAAC;IACvD,MAAMgE,OAAO,GAAGC,MAAM,CAACD,OAAO,CAAC5C,IAAI,CAACyC,YAAY,CAAC;IACjD,MAAMK,aAAa,GAAGF,OAAO,CAACrC,MAAM;IAEpC,MAAMwC,UAAU,GAAGjE,WAAW,CAAC0B,OAAO,CAACwC,IAAI,CAAE7B,CAAC,IAAKA,CAAC,CAAChE,EAAE,KAAK0C,MAAM,CAAC;IACnE,MAAMoD,KAAK,GAAG,CAAAF,UAAU,aAAVA,UAAU,wBAAAT,oBAAA,GAAVS,UAAU,CAAEhG,QAAQ,cAAAuF,oBAAA,uBAApBA,oBAAA,CAAsBd,CAAC,IAAG,GAAG,IAAI,GAAG,CAAC,CAAC;IACpD,MAAM0B,OAAO,GAAG,CAAAH,UAAU,aAAVA,UAAU,wBAAAR,qBAAA,GAAVQ,UAAU,CAAEhG,QAAQ,cAAAwF,qBAAA,uBAApBA,qBAAA,CAAsBb,CAAC,KAAI,CAAC;IAC5C,MAAMyB,eAAe,GAAG,GAAG;IAC3B,MAAMC,MAAM,GAAGF,OAAO,GAAI,CAACJ,aAAa,GAAG,CAAC,IAAIK,eAAe,GAAI,CAAC;IAEpEP,OAAO,CAACf,OAAO,CAAC,CAAC,CAACd,OAAO,EAAEsC,UAAU,CAAC,EAAEC,KAAK,KAAK;MAChD,MAAMC,MAAM,GAAGH,MAAM,GAAGE,KAAK,GAAGH,eAAe;MAE/CpE,QAAQ,CAACyB,OAAO,CAACS,IAAI,CAAC;QACpB9D,EAAE,EAAE,KAAK0C,MAAM,IAAIkB,OAAO,EAAE;QAC5BH,MAAM,EAAEf,MAAM;QACd2D,YAAY,EAAE,GAAG;QACjB1C,MAAM,EAAEC,OAAO;QACf0C,YAAY,EAAE,GAAG;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEF5E,WAAW,CAAC0B,OAAO,CAACS,IAAI,CAAC;QACvB9D,EAAE,EAAE4D,OAAO;QACX9D,IAAI,EAAE,YAAY;QAClBF,QAAQ,EAAE;UAAEyE,CAAC,EAAEyB,KAAK;UAAEvB,CAAC,EAAE6B;QAAO,CAAC;QACjCpH,IAAI,EAAE;UACJ8B,KAAK,EAAEoF,UAAU,CAACpF,KAAK;UACvBd,EAAE,EAAE4D,OAAO;UACX7C,WAAW,EAAEmF,UAAU,CAACnF,WAAW;UACnCK,QAAQ,EAAE,KAAK;UACfH,OAAO,EAAEA,CAAA,KAAMiE,WAAW,CAACtB,OAAO;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF/B,gBAAgB,CAACwB,OAAO,CAACU,GAAG,CAACrB,MAAM,CAAC;;IAEpC;IACAf,WAAW,CAAC0B,OAAO,GAAG1B,WAAW,CAAC0B,OAAO,CAACK,GAAG,CAACM,CAAC,IAC7CA,CAAC,CAAChE,EAAE,KAAK0C,MAAM,GACX;MACE,GAAGsB,CAAC;MACJhF,IAAI,EAAE;QAAE,GAAGgF,CAAC,CAAChF,IAAI;QAAEoC,QAAQ,EAAE;MAAK;IACpC,CAAC,GACD4C,CACN,CAAC;;IAED;IACA,MAAMwC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAChF,WAAW,CAAC0B,OAAO,CAACK,GAAG,CAAEM,CAAC,IAAK,CAACA,CAAC,CAAChE,EAAE,EAAEgE,CAAC,CAAC,CAAC,CAAC,CAAC4C,MAAM,CAAC,CAAC,CAAC;IAC3F,MAAMC,WAAW,GAAGJ,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC/E,QAAQ,CAACyB,OAAO,CAACK,GAAG,CAAEF,CAAC,IAAK,CAACA,CAAC,CAACxD,EAAE,EAAEwD,CAAC,CAAC,CAAC,CAAC,CAACoD,MAAM,CAAC,CAAC,CAAC;IAExF1E,QAAQ,CAACsE,WAAW,CAAC;IACrBnE,QAAQ,CAACwE,WAAW,CAAC;IACrBnF,QAAQ,CAAC6D,SAAS,CAAC;IACnB,MAAMuB,cAAc,GAAG,CAACpE,MAAM,EAAE,GAAG+C,OAAO,CAAC/B,GAAG,CAAC,CAAC,CAACE,OAAO,CAAC,KAAKA,OAAO,CAAC,CAAC;IACvE,MAAMmD,YAAY,GAAGpF,WAAW,CAAC0B,OAAO,CAACE,MAAM,CAACS,CAAC,IAAI8C,cAAc,CAACE,QAAQ,CAAChD,CAAC,CAAChE,EAAE,CAAC,CAAC;IACnF,MAAMiH,MAAM,GAAG9C,aAAa,CAAC4C,YAAY,CAAC;IAE1C,IAAIE,MAAM,IAAIjF,iBAAiB,CAACqB,OAAO,EAAE;MACvCrB,iBAAiB,CAACqB,OAAO,CAAC6D,SAAS,CAACD,MAAM,EAAE;QAC1C9H,OAAO,EAAE,GAAG;QACZgI,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC,EACD,CAAC1F,KAAK,EAAEO,iBAAiB,CAC3B,CAAC;EACD,MAAMoF,MAAM,GAAGvJ,WAAW,CAAEwJ,GAAG,IAAK;IAClCrF,iBAAiB,CAACqB,OAAO,GAAGgE,GAAG;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BC,UAAU,CAAC,MAAM;MACf,IAAIvF,iBAAiB,CAACqB,OAAO,EAAE;QAC7BrB,iBAAiB,CAACqB,OAAO,CAACmE,OAAO,CAAC;UAAErI,OAAO,EAAE;QAAI,CAAC,CAAC;MACrD;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,MAAM2J,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,IAAI,GAAG,MAAMjF,SAAS,CAAC,OAAO,CAAC;MACrC,IAAI,CAACiF,IAAI,EAAE;MAEX,MAAMC,MAAM,GAAGD,IAAI,CAACzE,QAAQ,IAAI,OAAO;MACvCtB,WAAW,CAAC0B,OAAO,CAACS,IAAI,CAAC;QACvB9D,EAAE,EAAE2H,MAAM;QACV7H,IAAI,EAAE,YAAY;QAClBF,QAAQ,EAAE;UAAEyE,CAAC,EAAE,GAAG;UAAEE,CAAC,EAAE;QAAG,CAAC;QAC3BvF,IAAI,EAAE;UACJ8B,KAAK,EAAE4G,IAAI,CAACE,UAAU,IAAI,WAAW;UACrC5H,EAAE,EAAE2H,MAAM;UACV5G,WAAW,EAAE,IAAI;UACjBK,QAAQ,EAAE,KAAK;UACfH,OAAO,EAAEA,CAAA,KAAMiE,WAAW,CAACyC,MAAM;QACnC;MACF,CAAC,CAAC;MAEFzF,QAAQ,CAAC,CAAC,GAAGP,WAAW,CAAC0B,OAAO,CAAC,CAAC;IACpC,CAAC;IACDoE,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACvC,WAAW,CAAC,CAAC;EAEjB,oBACEpG,OAAA;IAAKG,KAAK,EAAE;MAAE4F,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAC+C,GAAG,EAAE9F,gBAAiB;IAAAlC,QAAA,eACrEf,OAAA,CAACZ,SAAS;MACR+D,KAAK,EAAEA,KAAM;MACbG,KAAK,EAAEA,KAAM;MACbD,aAAa,EAAEA,aAAc;MAC7BG,aAAa,EAAEA,aAAc;MAC7BC,SAAS,EAAEA,SAAU;MACrBiF,OAAO;MACPM,cAAc,EAAE;QAAE3I,OAAO,EAAE;MAAI,CAAE;MACjCiI,MAAM,EAAEA,MAAO;MAAAvH,QAAA,gBAEff,OAAA,CAACX,UAAU;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdtB,OAAA,CAACV,QAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACoB,EAAA,CAnOID,UAAU;EAAA,QAQ2BlD,aAAa,EACbE,aAAa;AAAA;AAAAwJ,GAAA,GATlDxG,UAAU;AAqOhB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAyG,GAAA;AAAAC,YAAA,CAAA1G,EAAA;AAAA0G,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}