{"ast":null,"code":"var _jsxFileName = \"/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactFlow, { Background, useNodesState, useEdgesState, Handle, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: 'EC140',\n  type: 'customNode',\n  position: {\n    x: 250,\n    y: 5\n  },\n  data: {\n    label: 'Autofinancement',\n    onDrill: id => alert('Drill into node ' + id),\n    id: 'EC140'\n  }\n}, {\n  id: 'R07',\n  type: 'customNode',\n  position: {\n    x: 100,\n    y: 150\n  },\n  data: {\n    label: \"Capacité d'autofinancement\",\n    onDrill: id => alert('Drill into node ' + id),\n    id: 'R07'\n  }\n}, {\n  id: 'EC047',\n  type: 'customNode',\n  position: {\n    x: 400,\n    y: 150\n  },\n  data: {\n    label: 'Dividendes',\n    onDrill: id => alert('Drill into node ' + id),\n    id: 'EC047'\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: 'EC140',\n  target: 'R07',\n  animated: true\n}, {\n  id: 'e1-3',\n  source: 'EC140',\n  target: 'EC047',\n  animated: true\n}];\nconst CustomNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    border: '1px solid #ccc',\n    borderRadius: 8,\n    padding: 12,\n    background: '#fff',\n    minWidth: 180,\n    position: 'relative'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontWeight: 'bold',\n      marginBottom: 4\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      position: 'absolute',\n      right: 4,\n      bottom: 4,\n      fontSize: 12,\n      background: '#eee',\n      borderRadius: 4,\n      padding: '2px 6px',\n      cursor: 'pointer',\n      border: 'none'\n    },\n    onClick: () => data.onDrill(data.id),\n    children: \"+\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: Position.Top,\n    style: {\n      opacity: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: Position.Bottom,\n    style: {\n      opacity: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this);\n_c = CustomNode;\nconst nodeTypes = {\n  customNode: CustomNode\n};\nconst KPIDiagram = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [level, SetLevel] = useState(1);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.post('http://localhost:8000/api/getData', {\n          level: level\n        });\n        const nodesData = response.data.nodesData;\n\n        // Clear previous\n        // newNodesRef.current = [];\n        // edgesRef.current = [];\n\n        nodesData.forEach((node, nodeIndex) => {\n          const parentId = node.parentId;\n          const parentX = 150 + nodeIndex * 300;\n          const parentY = 50;\n          newNodesRef.current.push({\n            id: parentId,\n            type: 'customNode',\n            position: {\n              x: parentX,\n              y: parentY\n            },\n            data: {\n              label: node.parentName,\n              id: parentId,\n              onDrill: () => {\n                const children = Object.entries(node.childrenData || {});\n                children.forEach(([childId, childLabel], childIndex) => {\n                  newNodesRef.current.push({\n                    id: childId,\n                    type: 'customNode',\n                    position: {\n                      x: parentX + childIndex * 200 - children.length * 100,\n                      y: parentY + 150\n                    },\n                    data: {\n                      label: childLabel,\n                      id: childId,\n                      onDrill: () => alert('Drill into node ' + childId)\n                    }\n                  });\n                  edgesRef.current.push({\n                    id: `e-${parentId}-${childId}`,\n                    source: parentId,\n                    target: childId,\n                    animated: true\n                  });\n                });\n                SetLevel(prev => prev + 1);\n              }\n            }\n          });\n        });\n        const uniqueNodes = Array.from(new Map(newNodesRef.current.map(node => [node.id, node])).values());\n        setNodes(uniqueNodes);\n        setEdges(edgesRef.current);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetch();\n  }, [level]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '80vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      nodesDraggable: false,\n      children: /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => SetLevel(prev => prev + 1),\n      children: \"press\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(KPIDiagram, \"pHQaKbtOBkzrxJrdwT2BJ3WDAwM=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = KPIDiagram;\nexport default KPIDiagram;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"KPIDiagram\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ReactFlow","Background","useNodesState","useEdgesState","Handle","Position","axios","jsxDEV","_jsxDEV","initialNodes","id","type","position","x","y","data","label","onDrill","alert","initialEdges","source","target","animated","CustomNode","style","border","borderRadius","padding","background","minWidth","children","fontWeight","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","right","bottom","fontSize","cursor","onClick","Top","opacity","Bottom","_c","nodeTypes","customNode","KPIDiagram","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","level","SetLevel","newNodesRef","edgesRef","fetch","response","post","nodesData","forEach","node","nodeIndex","parentId","parentX","parentY","current","push","parentName","Object","entries","childrenData","childId","childLabel","childIndex","length","prev","uniqueNodes","Array","from","Map","map","values","error","console","height","width","fitView","nodesDraggable","_c2","$RefreshReg$"],"sources":["/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactFlow, {\n  Background,\n  useNodesState,\n  useEdgesState,\n  Handle,\n  Position,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\nconst initialNodes = [\n  {\n    id: 'EC140',\n    type: 'customNode',\n    position: { x: 250, y: 5 },\n    data: {\n      label: 'Autofinancement',\n      onDrill: (id) => alert('Drill into node ' + id),\n      id: 'EC140',\n    },\n  },\n  {\n    id: 'R07',\n    type: 'customNode',\n    position: { x: 100, y: 150 },\n    data: {\n      label: \"Capacité d'autofinancement\",\n      onDrill: (id) => alert('Drill into node ' + id),\n      id: 'R07',\n    },\n  },\n  {\n    id: 'EC047',\n    type: 'customNode',\n    position: { x: 400, y: 150 },\n    data: {\n      label: 'Dividendes',\n      onDrill: (id) => alert('Drill into node ' + id),\n      id: 'EC047',\n    },\n  },\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: 'EC140', target: 'R07', animated: true },\n  { id: 'e1-3', source: 'EC140', target: 'EC047', animated: true },\n];\n\nconst CustomNode = ({ data }) => (\n  <div\n    style={{\n      border: '1px solid #ccc',\n      borderRadius: 8,\n      padding: 12,\n      background: '#fff',\n      minWidth: 180,\n      position: 'relative',\n    }}\n  >\n    <div style={{ fontWeight: 'bold', marginBottom: 4 }}>{data.label}</div>\n    <button\n      style={{\n        position: 'absolute',\n        right: 4,\n        bottom: 4,\n        fontSize: 12,\n        background: '#eee',\n        borderRadius: 4,\n        padding: '2px 6px',\n        cursor: 'pointer',\n        border: 'none',\n      }}\n      onClick={() => data.onDrill(data.id)}\n    >\n      +\n    </button>\n    <Handle type=\"target\" position={Position.Top} style={{ opacity: 0 }} />\n    <Handle type=\"source\" position={Position.Bottom} style={{ opacity: 0 }} />\n  </div>\n);\n\nconst nodeTypes = {\n  customNode: CustomNode,\n};\n\nconst KPIDiagram = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [level, SetLevel] = useState(1);\n\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.post('http://localhost:8000/api/getData', {\n          level: level,\n        });\n        const nodesData = response.data.nodesData;\n\n        // Clear previous\n        // newNodesRef.current = [];\n        // edgesRef.current = [];\n\n        nodesData.forEach((node, nodeIndex) => {\n          const parentId = node.parentId;\n          const parentX = 150 + nodeIndex * 300;\n          const parentY = 50;\n\n          newNodesRef.current.push({\n            id: parentId,\n            type: 'customNode',\n            position: { x: parentX, y: parentY },\n            data: {\n              label: node.parentName,\n              id: parentId,\n              onDrill: () => {\n                const children = Object.entries(node.childrenData || {});\n                children.forEach(([childId, childLabel], childIndex) => {\n                  newNodesRef.current.push({\n                    id: childId,\n                    type: 'customNode',\n                    position: {\n                      x: parentX + (childIndex * 200) - (children.length * 100),\n                      y: parentY + 150,\n                    },\n                    data: {\n                      label: childLabel,\n                      id: childId,\n                      onDrill: () => alert('Drill into node ' + childId),\n                    },\n                  });\n\n                  edgesRef.current.push({\n                    id: `e-${parentId}-${childId}`,\n                    source: parentId,\n                    target: childId,\n                    animated: true,\n                  });\n                });\n\n                SetLevel((prev) => prev + 1);\n              },\n            },\n          });\n        });\n\n        const uniqueNodes = Array.from(\n          new Map(newNodesRef.current.map((node) => [node.id, node])).values()\n        );\n\n        setNodes(uniqueNodes);\n        setEdges(edgesRef.current);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetch();\n  }, [level]);\n\n  return (\n    <div style={{ height: '80vh', width: '100%' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        nodeTypes={nodeTypes}\n        fitView\n        nodesDraggable={false}\n      >\n        <Background />\n      </ReactFlow>\n      <button onClick={() => SetLevel((prev) => prev + 1)}>press</button>\n    </div>\n  );\n};\n\nexport default KPIDiagram;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}