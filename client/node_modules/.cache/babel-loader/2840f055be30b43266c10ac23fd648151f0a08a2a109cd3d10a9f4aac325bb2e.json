{"ast":null,"code":"var _jsxFileName = \"/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx\",\n  _s = $RefreshSig$();\n// src/components/KPIDiagram.jsx\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, { Background, Controls, useNodesState, useEdgesState, Handle, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      padding: '12px 16px',\n      borderRadius: 12,\n      background: '#fff',\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n      minWidth: 180,\n      maxWidth: 200,\n      textAlign: 'center',\n      fontSize: 14,\n      fontWeight: 500,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 8\n      },\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), data.hasChildren && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: data.onDrill,\n      style: {\n        padding: '4px 8px',\n        fontSize: 12,\n        borderRadius: 6,\n        border: 'none',\n        background: '#007bff',\n        color: 'white',\n        cursor: 'pointer'\n      },\n      children: data.expanded ? '➖' : '➕'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: \"a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nconst KPIDiagram = () => {\n  _s();\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Memoize nodeTypes to avoid React Flow warning\n  const nodeTypes = useMemo(() => ({\n    customNode: CustomNode\n  }), []);\n  const fetchNode = async nodeId => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n      // if(!res.data.found)\n      //   return;\n      console.log(res);\n      return res.data.node;\n    } catch (error) {\n      console.error('Error fetching node:', error);\n      return null;\n    }\n  };\n  const handleDrill = useCallback(async nodeId => {\n    var _parentNode$position;\n    const isExpanded = expandedNodeIds.has(nodeId);\n    if (isExpanded) {\n      // Collapse: remove all children nodes and their edges\n      const updatedNodes = newNodesRef.current.filter(n => !(n.id !== nodeId && edgesRef.current.some(e => e.source === nodeId && e.target === n.id)));\n      const updatedEdges = edgesRef.current.filter(e => e.source !== nodeId);\n\n      // Update refs\n      newNodesRef.current = updatedNodes;\n      edgesRef.current = updatedEdges;\n      setNodes([...updatedNodes]);\n      setEdges([...updatedEdges]);\n\n      // Remove from expanded set\n      setExpandedNodeIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(nodeId);\n        return newSet;\n      });\n      return;\n    }\n\n    // Expand: fetch and add children\n    const node = await fetchNode(nodeId);\n    if (!node || !node.childrenData) return;\n    const nextLevel = parseInt(node.level) + 1 || level + 1;\n    const entries = Object.entries(node.childrenData);\n    const totalChildren = entries.length;\n    const baseY = 100 + nextLevel * 180;\n    const parentNode = newNodesRef.current.find(n => n.id === nodeId);\n    const centerX = (parentNode === null || parentNode === void 0 ? void 0 : (_parentNode$position = parentNode.position) === null || _parentNode$position === void 0 ? void 0 : _parentNode$position.x) || 0;\n    const spacing = Math.max(200, 1200 / totalChildren);\n    const startX = centerX - (totalChildren - 1) * spacing / 2;\n    entries.forEach(([childId, childLabel], index) => {\n      const childX = startX + index * spacing;\n      edgesRef.current.push({\n        id: `e-${nodeId}-${childId}`,\n        source: nodeId,\n        sourceHandle: 'a',\n        target: childId,\n        targetHandle: 'a',\n        animated: true\n      });\n      newNodesRef.current.push({\n        id: childId,\n        type: 'customNode',\n        position: {\n          x: childX,\n          y: baseY\n        },\n        data: {\n          label: childLabel.label,\n          id: childId,\n          hasChildren: childLabel.hasChildren,\n          onDrill: () => {\n            if (childLabel.hasChildren) handleDrill(childId);\n          }\n        }\n      });\n    });\n    const uniqueNodes = Array.from(new Map(newNodesRef.current.map(n => [n.id, n])).values());\n    const uniqueEdges = Array.from(new Map(edgesRef.current.map(e => [e.id, e])).values());\n    setNodes(uniqueNodes);\n    setEdges(uniqueEdges);\n    setLevel(nextLevel);\n\n    // Mark this node as expanded\n    setExpandedNodeIds(prev => new Set(prev).add(nodeId));\n  }, [expandedNodeIds, level]);\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      if (!root) return;\n\n      // Use root's own _id or parentId? Usually root.id or _id\n      const rootId = root.parentId || 'EC140';\n      newNodesRef.current.push({\n        id: rootId,\n        type: 'customNode',\n        position: {\n          x: 500,\n          y: 50\n        },\n        data: {\n          label: root.parentName || 'Root Node',\n          id: rootId,\n          hasChildren: true,\n          onDrill: () => handleDrill(rootId)\n        }\n      });\n      setNodes([...newNodesRef.current]);\n    };\n    loadRoot();\n  }, [handleDrill]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.4\n      } // zoom and center nicely\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(KPIDiagram, \"4wn54sU+fMc4k8faiVreXYVeDn0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = KPIDiagram;\nexport default KPIDiagram;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"KPIDiagram\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useRef","useState","ReactFlow","Background","Controls","useNodesState","useEdgesState","Handle","Position","axios","jsxDEV","_jsxDEV","CustomNode","data","style","border","padding","borderRadius","background","boxShadow","minWidth","maxWidth","textAlign","fontSize","fontWeight","position","children","type","Top","id","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","label","hasChildren","onClick","onDrill","color","cursor","expanded","Bottom","_c","KPIDiagram","_s","level","setLevel","newNodesRef","edgesRef","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeTypes","customNode","fetchNode","nodeId","res","get","console","log","node","error","handleDrill","_parentNode$position","isExpanded","expandedNodeIds","has","updatedNodes","current","filter","n","some","e","source","target","updatedEdges","setExpandedNodeIds","prev","newSet","Set","delete","childrenData","nextLevel","parseInt","entries","Object","totalChildren","length","baseY","parentNode","find","centerX","x","spacing","Math","max","startX","forEach","childId","childLabel","index","childX","push","sourceHandle","targetHandle","animated","y","uniqueNodes","Array","from","Map","map","values","uniqueEdges","add","loadRoot","root","rootId","parentId","parentName","width","height","fitView","fitViewOptions","_c2","$RefreshReg$"],"sources":["/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx"],"sourcesContent":["// src/components/KPIDiagram.jsx\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactFlow, {\n  Background,\n  Controls,\n  useNodesState,\n  useEdgesState,\n  Handle,\n  Position,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\nconst CustomNode = ({ data }) => {\n  return (\n    <div\n      style={{\n        border: '1px solid #ccc',\n        padding: '12px 16px',\n        borderRadius: 12,\n        background: '#fff',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n        minWidth: 180,\n        maxWidth: 200,\n        textAlign: 'center',\n        fontSize: 14,\n        fontWeight: 500,\n        position: 'relative',\n      }}\n    >\n      <Handle type=\"target\" position={Position.Top} id=\"a\" />\n      <div style={{ marginBottom: 8 }}>{data.label}</div>\n      {data.hasChildren && (\n  <button\n    onClick={data.onDrill}\n    style={{\n      padding: '4px 8px',\n      fontSize: 12,\n      borderRadius: 6,\n      border: 'none',\n      background: '#007bff',\n      color: 'white',\n      cursor: 'pointer',\n    }}\n  >\n    {data.expanded ? '➖' : '➕'}\n  </button>\n)}\n\n      <Handle type=\"source\" position={Position.Bottom} id=\"a\" />\n    </div>\n  );\n};\n\n\nconst KPIDiagram = () => {\n  const [level, setLevel] = useState(0);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Memoize nodeTypes to avoid React Flow warning\n  const nodeTypes = useMemo(() => ({ customNode: CustomNode }), []);\n\n  const fetchNode = async (nodeId) => {\n    try {\n      const res = await axios.get(`http://localhost:8000/api/node/${nodeId}`);\n      // if(!res.data.found)\n      //   return;\n      console.log(res)\n      return res.data.node;\n    } catch (error) {\n      console.error('Error fetching node:', error);\n      return null;\n    }\n  };\n\n  const handleDrill = useCallback(\n    async (nodeId) => {\n      const isExpanded = expandedNodeIds.has(nodeId);\n  \n      if (isExpanded) {\n        // Collapse: remove all children nodes and their edges\n        const updatedNodes = newNodesRef.current.filter(\n          (n) => !(n.id !== nodeId && edgesRef.current.some(e => e.source === nodeId && e.target === n.id))\n        );\n        const updatedEdges = edgesRef.current.filter(e => e.source !== nodeId);\n  \n        // Update refs\n        newNodesRef.current = updatedNodes;\n        edgesRef.current = updatedEdges;\n  \n        setNodes([...updatedNodes]);\n        setEdges([...updatedEdges]);\n  \n        // Remove from expanded set\n        setExpandedNodeIds((prev) => {\n          const newSet = new Set(prev);\n          newSet.delete(nodeId);\n          return newSet;\n        });\n  \n        return;\n      }\n  \n      // Expand: fetch and add children\n      const node = await fetchNode(nodeId);\n      if (!node || !node.childrenData) return;\n  \n      const nextLevel = parseInt(node.level) + 1 || level + 1;\n      const entries = Object.entries(node.childrenData);\n      const totalChildren = entries.length;\n      const baseY = 100 + nextLevel * 180;\n  \n      const parentNode = newNodesRef.current.find((n) => n.id === nodeId);\n      const centerX = parentNode?.position?.x || 0;\n      const spacing = Math.max(200, 1200 / totalChildren);\n      const startX = centerX - ((totalChildren - 1) * spacing) / 2;\n  \n      entries.forEach(([childId, childLabel], index) => {\n        const childX = startX + index * spacing;\n  \n        edgesRef.current.push({\n          id: `e-${nodeId}-${childId}`,\n          source: nodeId,\n          sourceHandle: 'a',\n          target: childId,\n          targetHandle: 'a',\n          animated: true,\n        });\n  \n        newNodesRef.current.push({\n          id: childId,\n          type: 'customNode',\n          position: { x: childX, y: baseY },\n          data: {\n            label: childLabel.label,\n            id: childId,\n            hasChildren: childLabel.hasChildren,\n            onDrill: () => {\n              if (childLabel.hasChildren) handleDrill(childId);\n            },\n          },\n        });\n      });\n  \n      const uniqueNodes = Array.from(\n        new Map(newNodesRef.current.map((n) => [n.id, n])).values()\n      );\n      const uniqueEdges = Array.from(\n        new Map(edgesRef.current.map((e) => [e.id, e])).values()\n      );\n  \n      setNodes(uniqueNodes);\n      setEdges(uniqueEdges);\n      setLevel(nextLevel);\n  \n      // Mark this node as expanded\n      setExpandedNodeIds((prev) => new Set(prev).add(nodeId));\n    },\n    [expandedNodeIds, level]\n  );\n  \n\n  useEffect(() => {\n    const loadRoot = async () => {\n      const root = await fetchNode('EC140');\n      if (!root) return;\n\n      // Use root's own _id or parentId? Usually root.id or _id\n      const rootId = root.parentId || 'EC140';\n      newNodesRef.current.push({\n        id: rootId,\n        type: 'customNode',\n        position: { x: 500, y: 50 },\n        data: {\n          label: root.parentName || 'Root Node',\n          id: rootId,\n          hasChildren : true,\n          onDrill: () => handleDrill(rootId),\n        },\n      });\n\n      setNodes([...newNodesRef.current]);\n    };\n    loadRoot();\n  }, [handleDrill]);\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            nodeTypes={nodeTypes}\n            fitView\n            fitViewOptions={{ padding: 0.4 }} // zoom and center nicely\n          >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default KPIDiagram;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}