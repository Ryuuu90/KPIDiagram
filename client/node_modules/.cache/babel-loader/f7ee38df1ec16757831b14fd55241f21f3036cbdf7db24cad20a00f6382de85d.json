{"ast":null,"code":"var _jsxFileName = \"/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport ReactFlow, { Background, useNodesState, useEdgesState, Handle, Position } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    border: '1px solid #ccc',\n    borderRadius: 8,\n    padding: 12,\n    background: '#fff',\n    minWidth: 180,\n    position: 'relative'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontWeight: 'bold',\n      marginBottom: 4\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      position: 'absolute',\n      right: 4,\n      bottom: 4,\n      fontSize: 12,\n      background: '#eee',\n      borderRadius: 4,\n      padding: '2px 6px',\n      cursor: 'pointer',\n      border: 'none'\n    },\n    onClick: () => data.onDrill(data.id),\n    children: \"+\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: Position.Top,\n    style: {\n      opacity: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: Position.Bottom,\n    style: {\n      opacity: 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = CustomNode;\nconst nodeTypes = {\n  customNode: CustomNode\n};\nconst KPIDiagram = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [level, SetLevel] = useState(1);\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.post('http://localhost:8000/api/getData', {\n          level: level\n        });\n        const nodesData = response.data.nodesData;\n\n        // Clear previous data\n        newNodesRef.current = [];\n        edgesRef.current = [];\n        nodesData.forEach((node, nodeIndex) => {\n          const parentId = node.parentId;\n          const parentX = 200 + nodeIndex * 300;\n          const parentY = 50;\n\n          // Add parent node\n          newNodesRef.current.push({\n            id: parentId,\n            type: 'customNode',\n            position: {\n              x: parentX,\n              y: parentY\n            },\n            data: {\n              label: node.parentName,\n              id: parentId,\n              onDrill: () => {\n                const children = Object.entries(node.childrenData || {});\n                children.forEach(([childId, childLabel], childIndex) => {\n                  const childX = parentX + childIndex * 200 - children.length * 100;\n                  const childY = parentY + 200;\n                  newNodesRef.current.push({\n                    id: childId,\n                    type: 'customNode',\n                    position: {\n                      x: childX,\n                      y: childY\n                    },\n                    data: {\n                      label: childLabel,\n                      id: childId,\n                      onDrill: () => alert('Drill into node ' + childId)\n                    }\n                  });\n                  edgesRef.current.push({\n                    id: `e-${parentId}-${childId}`,\n                    source: parentId,\n                    target: childId,\n                    animated: true\n                  });\n                });\n                SetLevel(prev => prev + 1);\n              }\n            }\n          });\n        });\n\n        // Remove duplicates\n        const uniqueNodes = Array.from(new Map(newNodesRef.current.map(node => [node.id, node])).values());\n        setNodes(uniqueNodes);\n        setEdges(edgesRef.current);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetch();\n  }, [level]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '80vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true,\n      nodesDraggable: false,\n      children: /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => SetLevel(prev => prev + 1),\n      children: \"Load Next Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(KPIDiagram, \"pHQaKbtOBkzrxJrdwT2BJ3WDAwM=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = KPIDiagram;\nexport default KPIDiagram;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"KPIDiagram\");","map":{"version":3,"names":["React","useEffect","useRef","useState","ReactFlow","Background","useNodesState","useEdgesState","Handle","Position","axios","jsxDEV","_jsxDEV","CustomNode","data","style","border","borderRadius","padding","background","minWidth","position","children","fontWeight","marginBottom","label","fileName","_jsxFileName","lineNumber","columnNumber","right","bottom","fontSize","cursor","onClick","onDrill","id","type","Top","opacity","Bottom","_c","nodeTypes","customNode","KPIDiagram","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","level","SetLevel","newNodesRef","edgesRef","fetch","response","post","nodesData","current","forEach","node","nodeIndex","parentId","parentX","parentY","push","x","y","parentName","Object","entries","childrenData","childId","childLabel","childIndex","childX","length","childY","alert","source","target","animated","prev","uniqueNodes","Array","from","Map","map","values","error","console","height","width","fitView","nodesDraggable","_c2","$RefreshReg$"],"sources":["/Users/khalidabourkia/Desktop/diagram/client/src/components/KPIDiagram.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactFlow, {\n  Background,\n  useNodesState,\n  useEdgesState,\n  Handle,\n  Position,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport axios from 'axios';\n\nconst CustomNode = ({ data }) => (\n  <div\n    style={{\n      border: '1px solid #ccc',\n      borderRadius: 8,\n      padding: 12,\n      background: '#fff',\n      minWidth: 180,\n      position: 'relative',\n    }}\n  >\n    <div style={{ fontWeight: 'bold', marginBottom: 4 }}>{data.label}</div>\n    <button\n      style={{\n        position: 'absolute',\n        right: 4,\n        bottom: 4,\n        fontSize: 12,\n        background: '#eee',\n        borderRadius: 4,\n        padding: '2px 6px',\n        cursor: 'pointer',\n        border: 'none',\n      }}\n      onClick={() => data.onDrill(data.id)}\n    >\n      +\n    </button>\n    <Handle type=\"target\" position={Position.Top} style={{ opacity: 0 }} />\n    <Handle type=\"source\" position={Position.Bottom} style={{ opacity: 0 }} />\n  </div>\n);\n\nconst nodeTypes = {\n  customNode: CustomNode,\n};\n\nconst KPIDiagram = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [level, SetLevel] = useState(1);\n\n  const newNodesRef = useRef([]);\n  const edgesRef = useRef([]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.post('http://localhost:8000/api/getData', {\n          level: level,\n        });\n        const nodesData = response.data.nodesData;\n\n        // Clear previous data\n        newNodesRef.current = [];\n        edgesRef.current = [];\n\n        nodesData.forEach((node, nodeIndex) => {\n          const parentId = node.parentId;\n          const parentX = 200 + nodeIndex * 300;\n          const parentY = 50;\n\n          // Add parent node\n          newNodesRef.current.push({\n            id: parentId,\n            type: 'customNode',\n            position: { x: parentX, y: parentY },\n            data: {\n              label: node.parentName,\n              id: parentId,\n              onDrill: () => {\n                const children = Object.entries(node.childrenData || {});\n                children.forEach(([childId, childLabel], childIndex) => {\n                  const childX =\n                    parentX + childIndex * 200 - (children.length * 100);\n                  const childY = parentY + 200;\n\n                  newNodesRef.current.push({\n                    id: childId,\n                    type: 'customNode',\n                    position: { x: childX, y: childY },\n                    data: {\n                      label: childLabel,\n                      id: childId,\n                      onDrill: () => alert('Drill into node ' + childId),\n                    },\n                  });\n\n                  edgesRef.current.push({\n                    id: `e-${parentId}-${childId}`,\n                    source: parentId,\n                    target: childId,\n                    animated: true,\n                  });\n                });\n\n                SetLevel((prev) => prev + 1);\n              },\n            },\n          });\n        });\n\n        // Remove duplicates\n        const uniqueNodes = Array.from(\n          new Map(newNodesRef.current.map((node) => [node.id, node])).values()\n        );\n\n        setNodes(uniqueNodes);\n        setEdges(edgesRef.current);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetch();\n  }, [level]);\n\n  return (\n    <div style={{ height: '80vh', width: '100%' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        nodeTypes={nodeTypes}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        fitView\n        nodesDraggable={false}\n      >\n        <Background />\n      </ReactFlow>\n      <button onClick={() => SetLevel((prev) => prev + 1)}>Load Next Level</button>\n    </div>\n  );\n};\n\nexport default KPIDiagram;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}